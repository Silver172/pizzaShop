@model PizzaShop.DataAccess.ViewModels.TableAndSectionViewModel;
@inject IHttpContextAccessor Accessor;
@using Newtonsoft.Json;
@using PizzaShop.ViewModels;
@{
    var PageSize = Model.Pagination.PageSize;
    var PageIndex = Model.Pagination.PageIndex;
    var TotalPage = Model.Pagination.TotalPage;
    var SearchString = Model.Pagination.SearchString;
    var TotalRecord = Model.Pagination.TotalRecord;
    var permission = JsonConvert.DeserializeObject<List<ManageRolePermissioinViewModel>>(Accessor.HttpContext.Session.GetString("permission"));
}

<section class="table-responsive">
    <table class="table modifier-table mb-0">
        <thead>
            <tr>
                <th scope="col">
                    <div class="form-check">
                        <input class="form-check-input selectAllTables" type="checkbox" value="" id="selectAllTables" />
                    </div>
                </th>
                <th scope="col">Name</th>
                <th class="text-center">Capacity</th>
                <th class="text-center">Status</th>
                <th scope="col" class="text-center d-@(permission[3].Canaddedit == false && permission[3].Candelete == false ? "none" : "")">Action</th>
            </tr>
        </thead>
        <tbody class="table-group-devider" id="TableList">
            @if (Model.TableList == null || Model.TableList.Count == 0)
            {
                <tr>
                    <td colspan="7" class="text-center text-secondary">No Tables Found</td>
                </tr>
            }
            else
            {
                @foreach (var table in Model.TableList)
                {
                    <tr>
                        <td>
                            <div class="form-check">
                                <input class="form-check-input tableCheckbox" type="checkbox" value="@table.Id" />
                            </div>
                        </td>
                        <td>@table.Name</td>
                        <td class="text-center">@table.Capacity</td>
                        <td class="text-center"><span class="@(table.Status == "Occupied" ? "Occupied" : "Available")">@table.Status</span></td>
                        <td class="text-center d-@(permission[3].Canaddedit == false && permission[3].Candelete == false ? "none" : "")">
                            <div class="d-flex justify-content-center">
                                <button type="button" class="btn p-0 border-0 me-3 editTableBtn d-@(permission[3].Canaddedit == false ? "none" : "")" value="@table.Id">
                                    <i class="fa-solid fa-pen"></i>
                                </button>
                                <button type="button" class="btn p-0 border-0 deleteTableBtn d-@(permission[3].Candelete == false ? "none" : "")" value="@table.Id">
                                    <i class="fa-regular fa-trash-can"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</section>

<div class="d-flex justify-content-center justify-content-sm-end align-items-center mt-2">
    <p class="mb-0 fs-6">Items Per page</p>
    <select class="mx-2 cursor-pointer" aria-label="Default select example" id="tablePageSize">
        <option value="5" selected="@(PageSize == 5 ? true : false)">5</option>
        <option value="10" selected="@(PageSize == 10 ? true : false)">10</option>
        <option value="15" selected="@(PageSize == 15 ? true : false)">15</option>
    </select>

    <span class="mb-0 ms-2 me-2 d-none d-md-block" id="showing">Showing @(Math.Min(((PageIndex - 1) * PageSize) + 1,
        TotalRecord)) -
        @(Math.Min(PageIndex * PageSize, TotalRecord)) of @TotalRecord</span>
    @if (PageIndex > 1)
        {
    <span class="btn btn-outline-secondary me-1 px-3 py-0" name="PageIndex" id="PreviousTables">
        <i class="fa-solid fa-less-than fa-sm"></i>
    </span>
        }
        else
    {
        <button class="btn btn-outline-secondary me-1 px-3 py-0" name="PageIndex" disabled>
            <i class="fa-solid fa-less-than fa-sm"></i>
        </button>
    }

    @if (PageIndex < TotalPage)
    {
        <a class="btn btn-outline-secondary px-3 py-0" name="PageIndex" id="NextTables">
            <i class="fa-solid fa-greater-than fa-sm"></i>
        </a>
    }
    else
    {
        <button class="btn btn-outline-secondary px-3 py-0" name="PageIndex" disabled>
            <i class="fa-solid fa-greater-than fa-sm"></i>
        </button>
    }
</div>

<div id="addEditTableContainer">
</div>

<div class="modal fade" id="deleteTableModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Delete Confirmation</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="text-center">
                <i class="fa-solid fa-triangle-exclamation fa-2xl" style="color: #FFD43B;"></i>
            </div>
            <div class="modal-body text-center p-1">
                <p class="fw-bold mb-0">Are you sure you want to delete this Table?</p>
            </div>
            <div class="modal-footer d-flex justify-content-center border-0">
                <button type="button" class="btn btn-primary" id="confirmDeleteTableBtn">Yes</button>
                <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteMultipleTableModal" tabindex="-1" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Delete Confirmation</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="text-center">
                <i class="fa-solid fa-triangle-exclamation fa-2xl" style="color: #FFD43B;"></i>
            </div>
            <div class="modal-body text-center p-1">
                <p class="fw-bold mb-0">Are you sure you want to delete this Tables?</p>
            </div>
            <div class="modal-footer d-flex justify-content-center border-0">
                <button type="button" class="btn btn-primary" id="confirmMultipleDeleteTableBtn">Yes</button>
                <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

<script>
    var tablePageIndex = @PageIndex;
    var tableAjaxReq;
    var deleteTableId;
    @* var debounceTimer *@
        function GetFilteredTables() {
            var SearchString = $("#searchTables").val();
            var pageSize = $("#tablePageSize").val();

            if (tableAjaxReq && tableAjaxReq.readyState !== 4)
                tableAjaxReq.abort();

            tableAjaxReq = $.ajax({
                url: "/TableAndSection/GetTablesBySectionId",
                type: "GET",
                data: {
                    id: sectionId,
                    pageIndex: tablePageIndex,
                    pageSize: pageSize,
                    searchString: SearchString
                },
                success: function (data) {
                    $("#table-list").html(data);
                }
            })
        }


    $('#tablePageSize').change(function () {
        var pageSize = @PageSize
        var pageIndex = 1
        GetFilteredTables();
    })

    $('#searchTables').keyup(function () {
        clearTimeout(debounceTimer);
        tablePageIndex = 1
        pageSize = @PageSize
        selectedIds = [];
            debounceTimer = setTimeout(() => {
                GetFilteredTables();
            }, 400)
    })

    $("#PreviousTables").click(function () {
        tablePageIndex -= 1;
        selectedIds = []
        GetFilteredTables()
    })

    $('#NextTables').click(function () {
        $("#PreviousBtn").attr('disabled', false)
        tablePageIndex += 1;
        selectedIds = []
        GetFilteredTables()
    })

    $(".editTableBtn").click(function () {
        var id = $(this).val();

        $.ajax({
            url: "/TableAndSection/AddEditTable",
            type: "GET",
            data: {
                id: id,
            },
            success: function (data) {
                $("#addEditTableContainer").html(data);
                $("#addEditTableModal").modal('show');
            }
        })
    })


    $(".deleteTableBtn").click(function () {
        deleteTableId = $(this).val();
        $("#deleteTableModal").modal('show');
    })

    $("#confirmDeleteTableBtn").click(function () {
        $.ajax({
            url: "/TableAndSection/DeleteTable",
            type: "POST",
            data: { id: deleteTableId },
            success: function (response) {
                if (response.isSuccess) {
                    toastr.success(response.message);
                    $("#deleteTableModal").modal('hide');
                    GetFilteredTables();
                }else{
                    toastr.error(response.message);
                    $("#deleteTableModal").modal('hide');
                }
            },
            error: function (error) {
                toastr.error(error.message);
            }
        })
    })

   
    $("#confirmMultipleDeleteTableBtn").click(function () {
        $.ajax({
            url: "/TableAndSection/DeleteMultipleTable",
            type: "POST",
            data: { ids: selectedIds },
            success: function (response) {
                if (response.isSuccess) {
                    toastr.success(response.message);
                    $("#deleteMultipleTableModal").modal('hide');
                    GetFilteredTables();
                    selectedIds = [];
                }else{
                    toastr.error(response.message);
                    $("#deleteMultipleTableModal").modal('hide');
                }
            },
            error: function (error) {
                toastr.error(error.message);
            }
        })
    })

    
    // Handle select all checkbox change
    $('.selectAllTables').change(function () {
        const isChecked = $(this).is(':checked');
        $('.tableCheckbox').each(function () {
            $(this).prop('checked', isChecked);

            const tableId = $(this).val();
            if (isChecked && !selectedIds.includes(tableId)) {
                selectedIds.push(tableId);
            } else if (!isChecked) {
                selectedIds = [];
            }
        });

    }); 
</script>