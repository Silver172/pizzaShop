@model PizzaShop.DataAccess.ViewModels.ModifierTabViewModel;
@inject IHttpContextAccessor Accessor;
@using Newtonsoft.Json;
@using PizzaShop.ViewModels;
@{
    var permission = JsonConvert.DeserializeObject<List<ManageRolePermissioinViewModel>>(Accessor.HttpContext.Session.GetString("permission"));
}

@if(Model.ModifierGroupList.Count() == 0)
{
    <div class="text-center text-secondary">
        <p>No Modifier Group Found</p>
    </div>
}
@foreach (var mg in Model.ModifierGroupList)
{
    <div class="d-flex flex-wrap justify-content-between align-items-center item-category-btn p-2 my-2 modifierGrp @(mg.Id == Model.ModifierGroupList.First().Id ? "activeTabColor" : "")"
        data-id="@mg.Id">
        <h6 class="mb-0 fw-bold">
            <img src="~/images/icons/grid-six.svg" alt="grid-icon" class="category-btn-icon" />@mg.Name
        </h6>
        <span class="edit-delete-icon">
            <i class="fa-solid fa-pen mx-2 editModifierGroup  d-@(permission[2].Canaddedit == false ? "none" : "")" data-id="@mg.Id"></i>
            <i class="fa-regular fa-trash-can mx-2 deleteModifierGroupIcon  d-@(permission[2].Candelete == false ? "none" : "")" data-id="@mg.Id"></i>
        </span>
    </div>
}


<!-- Add Modifier group Modal -->
<div class="modal fade" id="addModifierGroupModal" tabindex="-1" aria-labelledby="exampleModalLabel">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h1 class="modal-title fs-5" id="exampleModalLabel">
                    Add Modifier Group
                </h1>
                <button type="button" class="btn-close closeAddModal" ></button>
            </div>
                <div class="modal-body text-center p-1">
                <form class="p-3">
                    <div class="form-floating mb-3 p-0">
                        <input type="text" class="form-control" id="modifierGroupName" placeholder="ModifierGroup" />
                        <label for="modifierGroupName">Name*</label>
                    </div>

                    <div class="form-floating p-0">
                        <textarea class="form-control" placeholder="Description" id="modifierGroupDescription"></textarea>
                        <label for="modifierGroupDescription">Description</label>
                    </div>
                    <div>
                    <button class="btn btn-light border-0 text-primary bg-light AddExistingModifierModalBtn" type="button">
                        <i class="fa-solid fa-plus me-2"></i>Add Existing
                        Modifier
                    </button>
                    </div>
                </form>
                </div>
                
                <div class="px-3 selectedModifiers">
                </div>
                <div class="modal-footer d-flex justify-content-end border-0">
                    <button type="button" class="btn btn-primary" id="SaveModifierGroupBtn">
                        Save
                    </button>
                    <button type="button" class="btn btn-outline-primary closeAddModal" >
                        Cancel
                    </button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Modifier group -->
<div class="modal fade" id="editModifierGroupModal" tabindex="-1" aria-labelledby="exampleModalLabel" >
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h1 class="modal-title fs-5" id="exampleModalLabel">
                    Edit Modifier Group
                </h1>
                <button type="button" class="btn-close closeModal" ></button>
            </div>
            <div class="modal-body p-1">
                <form class="p-3">
                    <div class="form-floating mb-3 p-0">
                        <input type="text" class="form-control" id="editModifierGroupName" placeholder="Category" />
                        <label for="modifierName">Name*</label>
                    </div>

                    <div class="form-floating p-0">
                        <textarea class="form-control" placeholder="Description" id="editModifierGroupDesc"></textarea>
                        <label for="modifierDesc">Description</label>
                    </div>
                    <div>
                        <button class="btn btn-white border-0 text-primary bg-light AddExistingModifierModalBtn" type="button" >
                            <i class="fa-solid fa-plus me-2"></i>Add Existing
                            Modifier
                        </button>
                    </div>
                    <div class="px-3 selectedModifiers">
                    </div>
                </form>
            </div>
            <div class="modal-footer d-flex justify-content-end border-0">
                <button type="button" class="btn btn-primary" id="editModifierBtn">
                    Save
                </button>
                <button type="button" class="btn btn-outline-primary closeModal" >
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>

<!-- delete Modifier group -->
<div class="modal fade" id="deleteModifierGroupModal" tabindex="-1" aria-labelledby="exampleModalLabel" >
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h1 class="modal-title fs-5" id="exampleModalLabel">
                    Delete Confirmation
                </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center p-1">
                <img src="~/images/toppng.com-warning-icon-2400x2400.png" alt="alert-icon" id="aleret-icon" />
                <p class="fw-bold mb-0">
                    Are you sure you want to delete this modifiergroup?
                </p>
            </div>
            <div class="modal-footer d-flex justify-content-center border-0">
                <button type="button" class="btn btn-primary" id="deleteModifierGroupBtn">Yes</button>
                <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">
                    No
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Existing Modifiers Modal -->
<div class="modal fade" id="ExistingModifier" tabindex="-1" aria-labelledby="exampleModalLabel" >
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h1 class="modal-title fs-5" id="exampleModalLabel">
                    Select Existing Modifier
                </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center p-1">
                <table id="example" class="display" style="width:100%">
                    <thead>
                        <tr>
                            <th>
                                <div class="form-check">
                                    @* <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" /> *@
                                </div>
                            </th>
                            <th>Name</th>
                            <th>Unit</th>
                            <th>Rate</th>
                            <th>Quantity</th>
                        </tr>
                    </thead>
                    <tbody id="ModifiersTable">
                        @foreach (var mod in Model.AllModifiers)
                        {
                            <tr>
                                <td>
                                    <div class="form-check">
                                        <input class="form-check-input modifierCheckbox" type="checkbox"
                                           data-id=@mod.Id value=@mod.Name data-name="@mod.Name"/>
                                    </div>
                                </td>
                                <td>@mod.Name</td>
                                <td>@mod.Unit</td>
                                <td>@mod.Rate</td>
                                <td>@mod.Quantity</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="modal-footer d-flex justify-content-start border-0">
                <button type="button" class="btn btn-primary" id="AddExistingModifiersBtn">Add</button>
                <button type="button" class="btn btn-outline-primary" id="closeExistingModifierModal" data-bs-dismiss="modal">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>



<script>
    var ModifierGroupId = @Model.ModifierGroupList.First().Id;

    $(".modifierGrp").click(function () {
        ModifierGroupId = $(this).data('id');
        $(".modifierGrp").removeClass('activeTabColor');
        $(this).addClass("activeTabColor");
        modifierPageIndex = 1;
        $("#searchModifier").val("");
        GetFilteredModifiers();
    })
    new DataTable('#example', {
         ordering: false,
        pagingType: 'simple',
        dom: "<'row'<'col-sm-6 col-offset-sm-6'f>>" +
            "<'row'<'col-sm-12'tr>>" +
            "<'row d-flex justify-content-end align-items-center'<'col-auto'l><'col-auto'i><'col-auto'p>>",
        language: {
            info: 'Showing _START_ - _END_ of _TOTAL_ ',
            lengthMenu: '<select>' +
                '<option value="5">5</option>' +
                '<option value="10">10</option>' +
                '<option value="15">15</option>' +
                '</select>'
        },
        pageLength: 5
    });

    $("#AddModifierModalBtn").click(function(){
        $("#addModifierGroupModal").modal('show');
    })

    $(".AddExistingModifierModalBtn").click(function(){
        $("#ExistingModifier").modal('show');
    })

    $(".closeModal").click(function(){
         var container = $(".selectedModifiers");
            container.empty();
        ExistingModifiers = []
        $("#editModifierGroupModal").modal('hide');
        $(`.modifierCheckbox`).prop("checked", false); 
    })

     $(".closeAddModal").click(function(){
         var container = $(".selectedModifiers");
            container.empty();
        ExistingModifiers = []
        $("#addModifierGroupModal").modal('hide');
        $(`.modifierCheckbox`).prop("checked", false); 
    })

    var ExistingModifiers = [];
    $("#ModifiersTable").on("click", ".modifierCheckbox", function () {
        var modifierName = $(this).val();
        var modifierId = $(this).data('id');
        if(this.checked == true)
        {
            ExistingModifiers.push({id:modifierId,name:modifierName})
        }else{
            ExistingModifiers = ExistingModifiers.filter(m => m.name != modifierName)
        }
    })

    $("#AddExistingModifiersBtn").click(function(){
        $("#ExistingModifier").modal('hide');
        var container = $(".selectedModifiers");
            container.empty();
            
            ExistingModifiers.forEach(modifier => {
                var span = $(`<span class='modifier-item border rounded-pill p-1 me-1 my-2 em-list' data-id='${modifier.id}' data-name='${modifier.name}'></span>`).text(modifier.name);
                var removeBtn = $("<i class='fa-solid fa-xmark remove ms-1' style='cursor:pointer'></i>").click(function () {
                    ExistingModifiers = ExistingModifiers.filter(m => m.name != modifier.name);
                    $(this).parent().remove();
                    $(this).removeClass('em-list');
                    $(`.modifierCheckbox[data-name='${modifier.name}']`).prop("checked", false); 
                });

                span.append(removeBtn);
                container.append(span);
                updateModifierCheckboxes();
            });
        @* $("#addModifierGroupModal").modal('show'); *@
    })

    $("#SaveModifierGroupBtn").click(function(){
        var name = $("#modifierGroupName").val();
        var description = $("#modifierGroupDescription").val();

        if (name.trim() === "") {
                toastr.warning("Please fill Modifier Group Name");
            return;
        }

        if(name.length > 50)
        {
                toastr.warning("Name should be less then 50 character");
                return;
        }

        var postData = {
            Name: name,
            Description: description,
            Modifiers: ExistingModifiers
        };
        $.ajax({
                url: "/Menu/AddModifierGroup",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(postData),
                success: function (response) {
                    if(response.isExist)
                    {
                        toastr.error(response.message);
                        return;
                    }
                    $("#addModifierGroupModal").modal('hide');
                    toastr.success("Modifier group added successfully");
                    $("#modifier-list").html(response); 
                    var container = $(".selectedModifiers");
                    container.empty();
                    $(`.modifierCheckbox`).prop("checked", false); 
                },
                error: function(error){
                    toastr.error(error.message);
                }
            });
    })


    $(document).on('click',".dt-paging-button.next ",function(){
        updateModifierCheckboxes();
    })
    
    $(document).on('click',".dt-paging-button.previous ",function(){
       updateModifierCheckboxes();
    })

    function updateModifierCheckboxes() {
        $(`.modifierCheckbox`).prop("checked", false);
            ExistingModifiers.forEach(m => {
                $(`.modifierCheckbox[data-name='${m.name}']`).prop("checked", true);
            });
    }

    var editModifierGroupId;
    $(".editModifierGroup").click(function(){
        editModifierGroupId = $(this).data('id');
        
        $.ajax({
            url:'/Menu/EditModifierGroup',
            type: 'GET',
            data: {id:editModifierGroupId},
            success: function(response){
                if(response.data != null){
                    $("#editModifierGroupName").val(response.data.name); 
                    $("#editModifierGroupDesc").val(response.data.description);
                    var container = $(".selectedModifiers");
                    container.empty(); 
                    ExistingModifiers = [];
                    response.data.modifiers.map(m => ExistingModifiers.push({id:m.id,name:m.name})); 

                    response.data.modifiers.forEach(modifier => {
                        var span = $(`<span class='modifier-item border rounded-pill p-1 me-1 my-2 em-list' data-id='${modifier.id}' data-name='${modifier.name}'></span>`).text(modifier.name);
                        var removeBtn = $("<i class='fa-solid fa-xmark remove  ms-1' style='cursor:pointer'></i>").click(function () {
                            ExistingModifiers = ExistingModifiers.filter(m => m.name != modifier.name);
                            $(this).parent().remove(); 
                            $(this).removeClass('em-list');
                            $(`.modifierCheckbox[data-name='${modifier.name}']`).prop("checked", false); 
                        });

                        span.append(removeBtn);
                        container.append(span);
                    });
                $("#editModifierGroupModal").modal('show');
                 updateModifierCheckboxes();
                }
            },
            error: function(error){
                toastr.error(error.message);
            }
        })
    })


    $("#editModifierBtn").click(function(){
        var name = $("#editModifierGroupName").val();
        var description = $("#editModifierGroupDesc").val();

        if (name.trim() === "") {
                toastr.warning("Please fill Modifier Group Name");
            return;
        }
        if(name.length > 50)
        {
                toastr.warning("Name should be less then 50 character");
                return;
        }
        var EMList = [];
        var uniqueIds = new Set();
        $(".em-list").map(function() {
            var modifierId = $(this).data('id');
            var modifierName = $(this).data('name');
            if (!uniqueIds.has(modifierId)) {
                EMList.push({ id: modifierId, name: modifierName });
                uniqueIds.add(modifierId); // Mark this ID as processed
            }
        });

        var postData = {
            Id: editModifierGroupId,
            Name: name,
            Description: description,
            Modifiers: ExistingModifiers
        };

        $.ajax({
            url: "/Menu/EditModifierGroup",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(postData),
            success: function (response) {
                    if(response.isExist == true)
                    {
                        toastr.error(response.message)
                        return;
                    }
                    $("#editModifierGroupModal").modal('hide');
                    toastr.success("Modifier Group Updated Successfully");
                    $("#modifier-list").html(response); 
                    var container = $(".selectedModifiers");
                    container.empty();
                    ModifierGroupId = editModifierGroupId
                    GetFilteredModifiers();

                    $(".modifierGrp").removeClass('activeTabColor');
                    $(".modifierGrp").map(function(){
                        if($(this).data('id') == ModifierGroupId)
                        {
                            $(this).addClass("activeTabColor");
                        }
                    })
                    $(`.modifierCheckbox`).prop("checked", false);        
            },
            error: function(error){
                toastr.error("Error While Update Modifier Group");
            }
        })
    })

    $(".deleteModifierGroupIcon").click(function(){
        ModifierGroupId = $(this).data('id');
        $("#deleteModifierGroupModal").modal('show');
    })

    $("#deleteModifierGroupBtn").click(function(){

        $.ajax({
            url: "/Menu/DeleteModifierGroup",
            type: "POST",
            data: {id:ModifierGroupId},
            success: function (response) {
                    $("#deleteModifierGroupModal").modal('hide');
                    toastr.success("Modifier Group deleted Successfully");
                    $("#modifier-list").html(response); 
                    ModifierGroupId = @Model.ModifierGroupList.First().Id;
                    GetFilteredModifiers();
            },
            error: function(error){
                toastr.error("Error while delete modifier group");
            }
        })
    })


</script>