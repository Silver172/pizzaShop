@model List<PizzaShop.DataAccess.ViewModels.CategoriesViewModel>;
@inject IHttpContextAccessor Accessor;
@using Newtonsoft.Json;
@using PizzaShop.ViewModels;
@{
    var permission = JsonConvert.DeserializeObject<List<ManageRolePermissioinViewModel>>(Accessor.HttpContext.Session.GetString("permission"));
}
<partial name="_ValidationScriptsPartial" />
@foreach (var category in Model)
{
    <div class="d-flex flex-wrap justify-content-between align-items-center item-category-btn p-2 my-2 itemCategory @(category.Id == Model.First().Id ? "activeTabColor" : "")"
        data-id="@category.Id" style="cursor: pointer;">
        <h6 class="mb-0 fw-bold">
            <img src="~/images/icons/grid-six.svg" alt="grid-icon" class="category-btn-icon " />@category.Name
        </h6>
        <span class="edit-delete-icon">
            <i class="fa-solid fa-pen mx-2 editCategory d-@(permission[2].Canaddedit == false ? "none" : "")" style="cursor: pointer;" data-id="@category.Id"></i>
            <i class="fa-regular fa-trash-can mx-2 deleteCategory  d-@(permission[2].Candelete == false ? "none" : "")" style="cursor: pointer;" data-id="@category.Id"></i>
        </span>
    </div>
}


<!-- Delete Category Modal -->
<div class="modal fade" id="deleteCategoryModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h1 class="modal-title fs-5" id="exampleModalLabel">
                    Delete Confirmation
                </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body text-center p-1">
                <img src="~/images/toppng.com-warning-icon-2400x2400.png" alt="alert-icon" id="aleret-icon" />
                <p class="fw-bold mb-0">
                    Are you sure you want to delete this Category?
                </p>
                    <div class="modal-footer d-flex justify-content-center border-0">
                        <button type="button" class="btn btn-primary" id="confirmDeleteCategoryBtn">Yes</button>
                        <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">
                            No
                        </button>
                    </div>
            </div>

        </div>
    </div>
</div>

<script>
    var categoryId = @Model.First().Id;
    var deleteCategoryId;

    async function GetAllCategories()
    {
            await $.ajax({
                url: '/Menu/GetAllCategories',
                type: 'GET',
                success: function (response) {
                    if(response.isSuccess == false)
                        toastr.error(error.message)
                    $(".category-list").html(response);
                },
                error: function(error){
                    toastr.error(error.message)
                }
            })
    }


    $(".itemCategory").click(function () {
        categoryId = $(this).data('id');
        $(".itemCategory").removeClass('activeTabColor');
        $(this).addClass("activeTabColor");
        $.ajax({
            url: '/Menu/GetItemsByCategoryId',
            type: 'GET',
            data: { id: categoryId, pageSize: 5, pageIndex: 1, searchString: "" },
            success: function (response) {
                $("#menuItems").html(response);
                $("#searchString").val("");
            },
            error: function (xhr,status,error) {

                if (status == "error") {
                    toastr.error("Not Authorised");
                }
            }
        })
    })
    $('.editCategory').click(function () {
            categoryId = $(this).data("id");
            $.ajax({
                url: '/Menu/AddEditCategory',
                type: 'GET',
                data: { id: categoryId },
                success: function (response) {
                    $("#addEditCategoryContainer").html(response);
                    $("#addCategoryModal").modal('show');
                }
            })
        })
    $(document).ready(function () {

        $('.deleteCategory').click(function () {
            deleteCategoryId = $(this).data("id");
            $("#DeleteCategoryId").val(categoryId);
            $("#deleteCategoryModal").modal('show');
        })
    })

    $("#confirmDeleteCategoryBtn").click(function(){
        $.ajax({
                url: '/Menu/DeleteCategory',
                type: 'POST',
                data: { id: deleteCategoryId },
                success: function (response) {
                    if(response.isSuccess)
                        toastr.success(response.message);
                    else
                        toastr.error(response.message);
                    $("#deleteCategoryModal").modal('hide');
                    GetAllCategories();
                    categoryId = @Model.First().Id;
                    GetFilteredItems();
                },
                error: function(error)
                {
                    toastr.error(error.message);
                }
        })
    })
</script>